<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="kikyoulzg.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="kikyoulzg.github.io/" rel="alternate" type="text/html" /><updated>2020-07-12T20:24:59+08:00</updated><id>kikyoulzg.github.io/feed.xml</id><title type="html">凌子的部落格</title><entry><title type="html">格雷厄姆与他的《黑客与画家》</title><link href="kikyoulzg.github.io/2020/06/20/%E6%A0%BC%E9%9B%B7%E5%8E%84%E5%A7%86%E4%B8%8E%E4%BB%96%E7%9A%84-%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6.html" rel="alternate" type="text/html" title="格雷厄姆与他的《黑客与画家》" /><published>2020-06-20T23:25:49+08:00</published><updated>2020-06-20T23:25:49+08:00</updated><id>kikyoulzg.github.io/2020/06/20/%E6%A0%BC%E9%9B%B7%E5%8E%84%E5%A7%86%E4%B8%8E%E4%BB%96%E7%9A%84%E3%80%8A%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6%E3%80%8B</id><content type="html" xml:base="kikyoulzg.github.io/2020/06/20/%E6%A0%BC%E9%9B%B7%E5%8E%84%E5%A7%86%E4%B8%8E%E4%BB%96%E7%9A%84-%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6.html">&lt;p&gt;&lt;img src=&quot;/downloads/heikeyuhuajia.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其实在我拿到这本书的时候，手机上的电子版已经看了大半，因为我想看看这本书到底值不值得入手实体书，毕竟49块钱差不多是我一天的实习补贴了。&lt;/p&gt;

&lt;p&gt;这本书是阮一峰翻译的所以质量应该还算挺不错，特别是第13章涉及lisp语言的部分他请了田春冰河校译这一点就让人觉得很靠谱。毕竟后者也是《on lisp》的译者。&lt;/p&gt;

&lt;p&gt;《黑客与画家》，这个书名本身就让人觉得有意思，就像雷蒙德的《大教堂与集市》一样，如果不看看内容，你可能猜不透它到底说的是啥。&lt;/p&gt;

&lt;p&gt;它的作者格雷厄姆本来是学哲学的，但是发现哲学太复杂以后在博士阶段转战人工智能。后来创业，开发了viaweb，这个软件后来被雅虎收购了。他创业的初衷其实很简单，那就是赚钱。&lt;/p&gt;

&lt;p&gt;事实上，他毕业以后曾花了很长一段时间学习绘画，并且也曾打算靠此谋生，但结果就是只能挤在窄小的公寓里过着紧巴巴的生活。这个厉害的黑客曾经也是个画家，并且他在书中还表达了一个观点：编程其实是一门手艺，和绘画并没有什么不同。而程序员也是目前最大的工匠群体。&lt;/p&gt;

&lt;p&gt;他的创业公司被雅虎收购以后，他也去了雅虎，但是由于和大公司的氛围格格不入，很快也就辞职了。辞职以后的他用现在的话来说就是有钱有闲，于是他在自己的博客上发表了大量和他创业的经验有关的文章，并广受网友好评。后来把那些文章集合起来，便有了这本书（当然经过了很多增减和排版），所以这本书可说是他的文集，真的不得不佩服作者和o’reilly的编辑们。&lt;/p&gt;

&lt;p&gt;黑客，互联网软件，创业，编程语言。大体上，本书就是关于这些的一个文集。但是如果割裂开来看，其实就不好看了，你要看到的应该是这些东西背后的作者本人和他的经验，这是一个整体。&lt;/p&gt;

&lt;p&gt;这本书读起来其实挺有趣的，有时会觉得作者的一些观点简直太对头了，而有时则不敢苟同，当然大部分时候我都只能喊着666。&lt;/p&gt;

&lt;p&gt;作者说在美国，许多人把孩子扔到校园里，是因为他们往往忙于工作，没时间照顾孩子，而那些被关在校园里的孩子和被关在笼子里的宠物并没有太多区别。如果放在中国，这样说其实挺过分的，毕竟还有许多小孩上不起学的。有多少父母为孩子上个学而伤透脑筋的。不过，对于大部分能上学的孩子，作者说的其实没错，这点上咱和美国差不多。&lt;/p&gt;

&lt;p&gt;作者又说，小孩往往离他们父母的工作都很远，他们只知道父母去工作了然后赚了钱，却对父母的工作本身一无所知。这一点确实是深有同感，我即将进入父母过去所在的行业，但是这个行业到底怎样，我到底要干啥，我适合干这行吗，这些我都不知道。&lt;/p&gt;

&lt;p&gt;现在我依然不理解父母的工作，也许以后会理解，也许不会。但是无论如何，我知道他们是在创造财富，这个财富指的不是钱，而是别人需要的东西，这个东西可以是一个物品也可以是一项服务。&lt;/p&gt;

&lt;p&gt;作者认为创业想要成功，必须创造出别人需要的东西，要换位思考，客户到底需要怎样的东西。&lt;/p&gt;

&lt;p&gt;“在现在，贫富分化，也就是说收入差距拉大，实际上是一种健康的信号。”初次看到书上的这个观点，我确实有点大跌眼镜，贫富差距增大怎么可能是件好事？作者是这样解释的，他认为技术的发展加大了贫富差距，但是技术在加大收入差距的同时，缩小了大部分其他的差距。就好比现在资本家和普通白领都能开得起车（虽然档次可能不同）。&lt;/p&gt;

&lt;p&gt;有趣的是，他后面说道，如果让他选择是生活在一个整体上非常富裕但是他个人相对贫穷的社会，还是生活在一个他个人相对非常富裕但是整体上非常贫穷的社会。他会选择第一个，但是如果他有小孩的话就得另说了（可见他写这本书的时候还没小孩）。&lt;/p&gt;

&lt;p&gt;作者似乎挺鄙视windows的，他使用的是freeBSD，一个类UNIX操作系统。这点倒是和咱差不多233。&lt;/p&gt;

&lt;p&gt;还有就是他花了不少笔墨去写互联网软件，也就是你的程序是运行在服务器上的，用户通过浏览器来使用它。从今天的角度来看，互联网软件确实占据了非常大的市场份额，你手机里的淘宝，微信其实都算互联网软件。但是我个人认为桌面软件是不会被完全淘汰的，除非互联网能绝对安全可靠，并且谁都能用上。再说，如果一个计算器或者日历，似乎也没有必要做成互联网软件的。在我看来一个靠谱的软件，应该在不用联网的情况下也能保证核心功能可用。&lt;/p&gt;

&lt;p&gt;格雷厄姆看起来应该是lisp语言的忠实粉丝无误。他可以说是不留余力地安利了一波lisp，不知道有多少人是因为这本书入了lisp的坑呢？&lt;/p&gt;

&lt;p&gt;他认为目前（指他写这本书的时候）最流行的编程语言里面最先进的那些（比如python）也仅仅达到1958年的lisp的水平。&lt;/p&gt;

&lt;p&gt;我是没用过lisp的，但是姑且相信作者所言是真的（也可以说相信他的品味），毕竟他开发viaweb的时候就大量使用了这种语言。&lt;/p&gt;

&lt;p&gt;我总结一下他说的关于lisp的特点：小众，先进，简洁，可编程性高，适合开发一次性程序，适合再设计，有很强大的宏。&lt;/p&gt;

&lt;p&gt;但是个人认为，lisp在函数库上和主流的差距是很大的。其次不知道目前有没有lisp的性能分析器，作者认为对于效率来说，有一个好的性能分析器比是否是静态类型或者是否是编译型语言要来的重要。最后，lisp能受得住时间的考验吗？我记得王垠有一篇文章叫《lisp已死，lisp永存》，有兴趣可以看看。&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">卡图故事4</title><link href="kikyoulzg.github.io/2020/06/14/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B4.html" rel="alternate" type="text/html" title="卡图故事4" /><published>2020-06-14T20:44:53+08:00</published><updated>2020-06-14T20:44:53+08:00</updated><id>kikyoulzg.github.io/2020/06/14/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B4</id><content type="html" xml:base="kikyoulzg.github.io/2020/06/14/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B4.html">&lt;p&gt;图片太多，就不搬过来了，要看的可以访问原链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/6b6b78390608&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">图片太多，就不搬过来了，要看的可以访问原链接</summary></entry><entry><title type="html">卡图故事3</title><link href="kikyoulzg.github.io/2020/05/24/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B3.html" rel="alternate" type="text/html" title="卡图故事3" /><published>2020-05-24T06:59:04+08:00</published><updated>2020-05-24T06:59:04+08:00</updated><id>kikyoulzg.github.io/2020/05/24/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B3</id><content type="html" xml:base="kikyoulzg.github.io/2020/05/24/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B3.html">&lt;p&gt;图片太多，就不搬过来了，要看的可以访问原链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/a92236e75766&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">图片太多，就不搬过来了，要看的可以访问原链接</summary></entry><entry><title type="html">人才市场分析（大雾）</title><link href="kikyoulzg.github.io/2020/04/19/%E4%BA%BA%E6%89%8D%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90.html" rel="alternate" type="text/html" title="人才市场分析（大雾）" /><published>2020-04-19T12:01:39+08:00</published><updated>2020-04-19T12:01:39+08:00</updated><id>kikyoulzg.github.io/2020/04/19/%E4%BA%BA%E6%89%8D%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90</id><content type="html" xml:base="kikyoulzg.github.io/2020/04/19/%E4%BA%BA%E6%89%8D%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90.html">&lt;p&gt;&lt;img src=&quot;/downloads/job0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对于求职这事，如果不是过来人可能很难感同身受，而且不同的人的体验可能也差别很大，但是有一点是可以明确的，无论是应聘者还是招聘者，都是在“人才”这个市场中进行着博弈。&lt;/p&gt;

&lt;p&gt;在这个市场里面最昂贵的是学术，其次是技术，然后才是学历和证书等。这也是符合物以稀为贵的准则的。不过学术这东西，我个人觉得对于大部分的参与者来说都是没有参考意义的，打个比方就是相当于场内交易。再说，就算是千里马也未必能遇到伯乐吧。至于技术，就比较直观，毕竟企业希望你过去是能创造价值的，而学历和证书无非是拍门砖，你到底有没有料很难光靠这个看出来，但是如果你是能证明自己有这个技术的，那就不一样了，这落到简历上就是你的经验和作品。&lt;/p&gt;

&lt;p&gt;不过如果你和我一样是应届生，那么我猜大部分人都是没有什么经验也没有拿的出手的作品，更别提学术了。所以只好看学历还有证书。&lt;/p&gt;

&lt;p&gt;在这个市场里，学历的价值按照学力来看，研究生 &amp;gt; 本科 &amp;gt; 专科 &amp;gt; 高中，这也是人才市场细分的开始。&lt;/p&gt;

&lt;p&gt;然后再就是专业，其实这个远比我当初(填报志愿的时候)所想的重要，除非你有技术(拿的出手那种)，否则跨领域是很难的，比如一个学经济学的（fintech除外)揣着自己的gayhub（一颗星都没有的那种）去找IT企业，不出意外会这样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/downloads/job1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在招聘软件里你如果看到，“感谢”，“人才库”等词汇，就是凉了～ 不过让人最绝望的大概就是“被查看”和“不合适”的时间是一样的……估计是看了下照片或者专业就pass了 :(&lt;/p&gt;

&lt;p&gt;如果大家都是软件工程的本科生，大连东软软件学院的和大连理工软件学院的，他们去微软面试就会不一样（我猜的），这就是学校的作用，知名度和在行业内的声誉。&lt;/p&gt;

&lt;p&gt;对于学历，专业和学校的知名度都接近的人，hr会怎么选择呢？其实这里面的情况很多，但是比较简单的办法就是看证书。比如你如果要去应聘会计，那么你最低的配置就是四级+初会，然后如果你有CPA的话优势应该会大很多。&lt;/p&gt;

&lt;p&gt;那作为“人才”这个市场的卖方，我们当然不能只想着让买方开心，哪怕他们才是上帝，对不对？&lt;/p&gt;

&lt;p&gt;试想，在商品市场中，企业是怎么思考的？我们从中又能得到怎样的启发？&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">卡图故事2</title><link href="kikyoulzg.github.io/2020/04/06/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B2.html" rel="alternate" type="text/html" title="卡图故事2" /><published>2020-04-06T21:18:06+08:00</published><updated>2020-04-06T21:18:06+08:00</updated><id>kikyoulzg.github.io/2020/04/06/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B2</id><content type="html" xml:base="kikyoulzg.github.io/2020/04/06/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B2.html">&lt;p&gt;图片太多，就不搬过来了，要看的可以访问原链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/2c8e6d6ef786&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">图片太多，就不搬过来了，要看的可以访问原链接</summary></entry><entry><title type="html">银行实习生心得</title><link href="kikyoulzg.github.io/2020/03/28/%E9%93%B6%E8%A1%8C%E5%AE%9E%E4%B9%A0%E7%94%9F%E5%BF%83%E5%BE%97.html" rel="alternate" type="text/html" title="银行实习生心得" /><published>2020-03-28T10:12:17+08:00</published><updated>2020-03-28T10:12:17+08:00</updated><id>kikyoulzg.github.io/2020/03/28/%E9%93%B6%E8%A1%8C%E5%AE%9E%E4%B9%A0%E7%94%9F%E5%BF%83%E5%BE%97</id><content type="html" xml:base="kikyoulzg.github.io/2020/03/28/%E9%93%B6%E8%A1%8C%E5%AE%9E%E4%B9%A0%E7%94%9F%E5%BF%83%E5%BE%97.html">&lt;p&gt;其实标题改成整理档案心得也是可以的，因为我的职责就是给风管的老师们整理档案。&lt;/p&gt;

&lt;p&gt;整理档案，听上去挺无脑的，大抵和去工地搬砖差不多吧。但是我知道如果只是把整理档案这事当作机械的劳动那么我就啥也学不到。所以我要思考，在这枯燥的工作中能学到什么。&lt;/p&gt;

&lt;p&gt;一个好的开始是成功的一半，这句箴言确实没毛病。来华兴实习第一天把乱糟糟的出账资料按照客户名区分开来并贴好标签，这是我日后顺利展开工作的基础，如果我没有认真对待的话，后面就会自吃苦头。&lt;/p&gt;

&lt;p&gt;把资料分好类以后，就是整理了，这些资料是银行对公或者对私的授信资料，简单来说就是银行放贷给你，你要给银行提供的资料包括各种合同，说明书等，方便你还不了钱的时候银行好收拾你。银行贷款的业务品种挺多的，比如银行承兑汇票，信用证，流动资金贷款，福费廷等，但是无论哪种业务放款审查表，授信批复，额度使用表是必须有的。&lt;/p&gt;

&lt;p&gt;感觉整理资料的过程是一个与同事交流的过程，不断从同事的反馈中得到改进，比如资料要分成档案，专夹和备份，退回给客户经理的材料三部分，档案的材料顺序按照清单来，一些和利率有关的资料不要放档案里，提前支取申请书单独放，每个单笔单独装订等。。。提问很重要，和人沟通很重要。&lt;/p&gt;

&lt;p&gt;在华宝信托实习的时候每个星期都要往银行跑，办业务，自己除了提供企业的材料和偶尔签个名以外就是看着银行的老师在那忙活，现在自己在银行实习了，嗯……其实感觉银行还是比较忙的，每天早上8点半去到大家都在办公室了，每天下午5点下班的时候大家却还在加班，由于家离得比较远所以我一般都是准时下班开溜的，哈哈哈。&lt;/p&gt;

&lt;p&gt;春节以后，我在的那个部门是2月10号就开始上班了，不过我请了两个星期假，到了龙抬头那天也就是2月24才去，一方面是为了自己，另一方面其实也是为了同事们的安全，嗯，是这样没错。不过每天乘地铁上下班看到这么多人在一个密闭的空间里其实还是很慌的，所幸的是佛山分行食堂的饭菜给我带来了极大的安慰，怀疑厨师是顺德人，但是可能在东北呆久了习惯了东北食堂阿姨那豪爽的饭量，感觉这边阿姨打的饭有点少。&lt;/p&gt;

&lt;p&gt;最后不得不感叹一下，2020年的就业真是太难了T-T&lt;/p&gt;

&lt;p&gt;其实呢，还是自己太菜。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/downloads/cai.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">其实标题改成整理档案心得也是可以的，因为我的职责就是给风管的老师们整理档案。</summary></entry><entry><title type="html">意义不明之代码</title><link href="kikyoulzg.github.io/2020/03/10/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E%E4%B9%8B%E4%BB%A3%E7%A0%81.html" rel="alternate" type="text/html" title="意义不明之代码" /><published>2020-03-10T22:58:17+08:00</published><updated>2020-03-10T22:58:17+08:00</updated><id>kikyoulzg.github.io/2020/03/10/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E%E4%B9%8B%E4%BB%A3%E7%A0%81</id><content type="html" xml:base="kikyoulzg.github.io/2020/03/10/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E%E4%B9%8B%E4%BB%A3%E7%A0%81.html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void swap(char *a,char *b){

char *c =a;

a = b;

b = c;

}

void wo(char *list,int k,int m){

if (k&amp;gt;m){

for(k = 0;k&amp;lt;=m;k++){

    printf(&quot;%c&quot;,list[k]);
}
printf(&quot;\n&quot;);
}

else{

for(int i=k;i&amp;lt;=m;i++){

swap(&amp;amp;list[i],&amp;amp;list[k]);

wo(list, k+1, m);

swap(&amp;amp;list[i],&amp;amp;list[k]);

break;

}

}

  }

void main(){

char list[]= {'s', 'u', 'a', 'n', 'q', 'q', 'o', 'r', 'z'};

wo(list, 0, 3);

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">``` #include</summary></entry><entry><title type="html">卡图故事1</title><link href="kikyoulzg.github.io/2020/03/08/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B1.html" rel="alternate" type="text/html" title="卡图故事1" /><published>2020-03-08T00:00:15+08:00</published><updated>2020-03-08T00:00:15+08:00</updated><id>kikyoulzg.github.io/2020/03/08/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B1</id><content type="html" xml:base="kikyoulzg.github.io/2020/03/08/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B1.html">&lt;p&gt;图片太多，就不搬过来了，要看的可以访问原链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/701148dfd44e&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">图片太多，就不搬过来了，要看的可以访问原链接</summary></entry><entry><title type="html">从开源到内部开源</title><link href="kikyoulzg.github.io/2020/03/01/%E4%BB%8E%E5%BC%80%E6%BA%90%E5%88%B0%E5%86%85%E9%83%A8%E5%BC%80%E6%BA%90.html" rel="alternate" type="text/html" title="从开源到内部开源" /><published>2020-03-01T13:45:00+08:00</published><updated>2020-03-01T13:45:00+08:00</updated><id>kikyoulzg.github.io/2020/03/01/%E4%BB%8E%E5%BC%80%E6%BA%90%E5%88%B0%E5%86%85%E9%83%A8%E5%BC%80%E6%BA%90</id><content type="html" xml:base="kikyoulzg.github.io/2020/03/01/%E4%BB%8E%E5%BC%80%E6%BA%90%E5%88%B0%E5%86%85%E9%83%A8%E5%BC%80%E6%BA%90.html">&lt;p&gt;&lt;img src=&quot;/downloads/innersource.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;开源，也就是所谓的opensource，多用于IT领域，意思就是公开源代码。这个起源于西方开源软件运动的词汇现在已经随处可见，就连微软这样的企业都说要拥抱开源，虽然……&lt;/p&gt;

&lt;p&gt;在开源这事里头最最耀眼的大概就是gnu/linux了吧，我最早在初中时代接触到这东西，第一次用是在一台叫逸珑8089b的国产笔记本上（性能非常捉急那种），从此就迷恋上了linux，也就此踏入开源的世界。有兴趣的可以去看看一部叫&lt;a href=&quot;https://www.bilibili.com/video/av9512574/&quot;&gt;操作系统革命&lt;/a&gt;的电影。好像扯得有点远。&lt;/p&gt;

&lt;p&gt;今天在一篇博文上看到了innersource这玩意，也就是内部开源。这个内部指的是企业内部，也就是在企业的内部使用这种开源的开发模式，按照我的理解就是创建一个企业内部的代码仓库，企业里面所有开发者都可以对里面的项目访问，克隆，修改和提交补丁。这样一个扁平化的模式是可以大大提高效率的，比如甲团队现在需要用到一个功能，这时乙团队开发的工具A恰好又有这个功能，甲就可以直接拿来用而不必自己造轮子，而且如果发现了bug或者有更好的想法并且有能力实现，这时他就可以把工具A克隆到自己的仓库，然后修改并提交补丁给乙。&lt;/p&gt;

&lt;p&gt;我个人觉得这其实不是什么新鲜的概念，对于很多企业来说只不过是从CC、SVN，RTC 等代码版本管理工具迁移到了Git，并且让开发团队更加扁平化。&lt;/p&gt;

&lt;p&gt;其实企业如果创建一个面向所有员工的博客，也可以算是一种内部开源，不过开源的不是代码，而是知识，里面的知识来自于每个员工。&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">卡图故事0</title><link href="kikyoulzg.github.io/2020/02/17/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B0.html" rel="alternate" type="text/html" title="卡图故事0" /><published>2020-02-17T23:56:29+08:00</published><updated>2020-02-17T23:56:29+08:00</updated><id>kikyoulzg.github.io/2020/02/17/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B0</id><content type="html" xml:base="kikyoulzg.github.io/2020/02/17/%E5%8D%A1%E5%9B%BE%E6%95%85%E4%BA%8B0.html">&lt;p&gt;图片太多，就不搬过来了，要看的可以访问原链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/a6fbffcd464e&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">图片太多，就不搬过来了，要看的可以访问原链接</summary></entry></feed>